{"version":3,"sources":["../../server/controllers/admincontroller.js"],"names":["Admin","req","res","body","id","bookName","description","author","quantity","publishYear","adminDb","filter","item","parseInt","length","newId","booksDb","newBook","push","bookId","status","send","message","foundId","params","booksdb","books","foundBookId","foundUserId","adminId","dateBorrowed","dateToReturn","userId","userDb","brwdBooksDb","newbrwId","newBrwdBook","brwId","brwApproval","rtnApproval","brwdBooks","dateReturned","returnStatus"],"mappings":"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","file":"admincontroller.js","sourcesContent":["import db from '../models/adminDb';\r\nimport books from '../models/booksDb';\r\nimport user from '../models/userDb';\r\nimport brwdBooks from '../models/brwdBooksDb';\r\n\r\n/**\r\n  * @class Admin\r\n  */\r\n   export default class Admin {\r\n   /**\r\n  *\r\n  * @param {object} req \r\n  * @param {object} res\r\n  * @return {object} json object\r\n  */\r\n  \r\n\r\n  addBook(req, res) {\r\n    const { id, bookName, description, author, quantity, publishYear } = req.body;\r\n    if(db.adminDb.filter(item => item.id === parseInt(id, 10)).length === 1) {\r\n     if (bookName && description && author && quantity && publishYear) { \r\n       if (typeof bookName === 'string' && typeof description === 'string' &&\r\n         typeof author === 'string' && typeof quantity === 'string' &&\r\n         typeof publishYear === 'string') {\r\n            const newId = books.booksDb.length + 1;\r\n            const newBook = books.booksDb.push({\r\n              bookId: newId,\r\n              bookName,\r\n              description,\r\n              author,\r\n              quantity,\r\n              publishYear\r\n            });\r\n              if (newBook) {\r\n                res.status(201).send({\r\n                message: 'book added by Admin user was successfully',\r\n                \r\n                });\r\n              } else {\r\n                res.status(500).send({\r\n                      message: 'failed to create new, try again'\r\n                });\r\n              }\r\n           \r\n         } else {\r\n         res.status(400).send({\r\n          message: ' data must be in strings!'\r\n         });\r\n       }\r\n          } else {\r\n        res.status(400).send({\r\n          message: 'Incomplete book data!'\r\n         \r\n        });\r\n      }\r\n   } else {\r\n           res.status(400).send({\r\n         message: 'you are not authorised to add a book, kindly contact your system administrator!'\r\n      });\r\n      \r\n    };\r\n  }\r\n \r\n\r\n modifyBook(req,res){\r\n   let foundId = false;\r\n  const { id, bookName, description, author, quantity, publishYear } = req.body;\r\n  const bookId = req.params.bookId;\r\n  if(db.adminDb.filter(item => item.id === parseInt(id, 10)).length === 1) {\r\n    if(books.booksDb.filter(item => item.bookId === parseInt(bookId,10)).length === 1){\r\n       if (typeof bookName === 'string' &&\r\n            typeof description === 'string' &&\r\n            typeof author === 'string' &&\r\n            typeof quantity === 'string' &&\r\n            typeof publishYear === 'string') {\r\n        books.booksDb.bookName = bookName || books.booksDb.bookName;\r\n        books.booksDb.description = description || books.booksdb.description;\r\n        books.booksDb.author = author || books.booksDb.author;\r\n        books.booksDb.quantity = quantity || books.booksDb.quantity;\r\n        books.booksDb.publishYear = publishYear || books.booksDb.publishYear;\r\n        foundId = true;\r\n        res.status(201).send({\r\n         message: 'book modified by Admin user was successfully',\r\n\r\n         books: books.booksDb\r\n          \r\n         });\r\n        } else {\r\n          res.status(400).send({\r\n                message: 'kindly ensure all inputs are strings'\r\n          });\r\n        }\r\n         \r\n       } else {\r\n       res.status(400).send({\r\n        message: ' No book of such exists!'\r\n       });\r\n     }\r\n        } \r\n     else {\r\n         res.status(403).send({\r\n       message: 'you are not authorised to  a modify any book, kindly contact your system administrator!'\r\n    });\r\n    \r\n  }\r\n }\r\n\r\n acceptBrwdBooks(req,res){\r\n  let foundBookId = false;\r\n  let foundUserId = false;\r\n  const {adminId, dateBorrowed, dateToReturn } = req.body;\r\n  const bookId = req.params.bookId;\r\n  const userId = req.params.userId;\r\n  if(Admin.adminDb.filter(item => item.adminId === parseInt(adminId,10)).length === 1){\r\nif(user.userDb.filter(item => item.userId === parseInt(userId,10)).length === 1){\r\n  if(books.booksDb.filter(item => item.bookId === parseInt(bookId, 10)).length === 1) {\r\n      if(brwdBooks.brwdBooksDb.filter(item => item.userId === parseInt(userId,10)).length === 1){\r\n        if(books.booksDb.quantity >= 1){\r\n       if (typeof dateBorrowed === 'string' &&\r\n            typeof dateToReturn === 'string' ) {\r\n              const newbrwId = brwdBooks.brwdBooksDb.length + 1;\r\n              const newBrwdBook = brwdBooks.brwdBooksDb.push({\r\n                brwId: newbrwId,\r\n                bookId,\r\n                userId,\r\n                dateBorrowed,\r\n                dateToReturn,\r\n                brwApproval: \"Approved\",\r\n                rtnApproval: \"yet to be returned\"\r\n    \r\n              });\r\n        foundBookId = true;\r\n        foundUserId = true;\r\n        res.status(201).send({\r\n         message: 'book accepted to be borrowed',\r\n         brwdBooks: brwdBooks.brwdBooksDb\r\n          \r\n         });\r\n        } else {\r\n          res.status(400).send({\r\n                message: 'kindly ensure all inputs are strings'\r\n          });\r\n        }\r\n\r\n      } else {\r\n        res.status(401).send({\r\n              message: 'book not available to be borrowed, please make another request'\r\n        });\r\n      }\r\n\r\n      } else {\r\n        res.status(401).send({\r\n              message: 'Sorry you must first return borrowed book before making another request'\r\n        });\r\n      }\r\n         \r\n       } else {\r\n       res.status(400).send({\r\n        message: ' No book of such exists!'\r\n       });\r\n     }\r\n        } \r\n     else {\r\n         res.status(403).send({\r\n       message: 'you are not authorised to borrow a book, kindly register to gain priviledge!'\r\n    });\r\n    \r\n  }\r\n  } else {\r\n  res.status(403).send({\r\n   message: 'Only System Administrator can Approve requests'\r\n  });\r\n}\r\n   \r\n }\r\n\r\n acceptRtndBook(req,res){\r\n  let foundBookId = false;\r\n  let foundUserId = false;\r\n  const {adminId,dateReturned} = req.body;\r\n  const bookId = req.params.bookId;\r\n  const userId = req.params.userId;\r\n\r\n  if(db.adminDb.filter(item => item.adminId === parseInt(adminId, 10)).length === 1) {\r\n  if(brwdBooks.brwdBooksDb.filter(item => item.bookId === parseInt(bookId, 10)).length === 1) {\r\n      if(brwdBooks.brwdBooksDb.filter(item => item.userId === parseInt(userId,10)).length === 1){\r\n          if (typeof dateBorrowed === 'string'){\r\n          brwdBooks.brwdBooksDb.dateReturned = dateReturned;\r\n          brwdBooks.brwdBooksDb.rtnApproval = \"Approved\";\r\n          brwdBooks.brwdBooksDb.returnStatus = \"returned\";\r\n          \r\n        \r\n        foundBookId = true;\r\n        foundUserId = true;\r\n        res.status(201).send({\r\n         message: 'book accepted to be borrowed',\r\n         brwdBooks: brwdBooks.brwdBooksDb\r\n          \r\n         });\r\n        } else {\r\n          res.status(400).send({\r\n                message: 'kindly ensure date has a string value'\r\n          });\r\n        }\r\n\r\n      \r\n      } else {\r\n        res.status(401).send({\r\n              message: 'Sorry you might have mada a mistake, this book does not belong here'\r\n        });\r\n      }\r\n         \r\n       } else {\r\n       res.status(400).send({\r\n        message: ' No book of such exists!'\r\n       });\r\n     }\r\n        \r\n     \r\n    } else {\r\n      res.status(400).send({\r\n       message: ' You do not have the right to Approve, contact our system admin!'\r\n      });\r\n    }\r\n       \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\n\r\n\r\n "]}